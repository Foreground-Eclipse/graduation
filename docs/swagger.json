{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for transferer service",
        "title": "Transferer API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8088",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/balance": {
            "get": {
                "description": "Получает баланс пользователя на основе предоставленного токена.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Получение баланса пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.BalanceResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/requests.NotAuthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/deposit": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Пополняет баланс пользователя на указанную сумму в указанной валюте.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deposit"
                ],
                "summary": "Пополнение баланса пользователя",
                "parameters": [
                    {
                        "description": "Данные для пополнения",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.DepositRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.DepositResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/requests.BadRequestError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/requests.NotAuthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/exchange": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Выполняет обмен валюты пользователя из одной валюты в другую.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exchange"
                ],
                "summary": "Обмен валюты пользователя",
                "parameters": [
                    {
                        "description": "Данные для обмена",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ExchangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.ExchangeResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/requests.BadRequestError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/requests.NotAuthorizedError"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Аутентифицирует пользователя и возвращает JWT токен.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Логин пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/requests.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/requests.CantCreateJWTError"
                        }
                    }
                }
            }
        },
        "/api/v1/rates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получает текущие курсы валют.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rates"
                ],
                "summary": "Получение курсов валют",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.RatesResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/requests.NotAuthorizedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/requests.RetrieveRatesError"
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "description": "Регистрирует нового пользователя в системе.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная регистрация",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Конфликт (имя пользователя или email уже существует)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/withdraw": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Снимает указанную сумму в указанной валюте с баланса пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "withdraw"
                ],
                "summary": "Снятие средств с баланса пользователя",
                "parameters": [
                    {
                        "description": "Данные для снятия",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.WithdrawRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.DepositResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/requests.BadRequestError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/requests.NotAuthorizedError"
                        }
                    },
                    "403": {
                        "description": "Недостаточно средств",
                        "schema": {
                            "$ref": "#/definitions/requests.NotEnoughFundsError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.BadRequestError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid json data"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "requests.BalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "requests.CantCreateJWTError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "could not create JWT token"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "requests.DepositRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 50
                },
                "currency": {
                    "type": "string",
                    "example": "USD"
                }
            }
        },
        "requests.DepositResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Account topped up successfully"
                }
            }
        },
        "requests.ExchangeRequest": {
            "type": "object",
            "required": [
                "amount",
                "from_currency",
                "to_currency"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 20
                },
                "from_currency": {
                    "type": "string",
                    "example": "USD"
                },
                "to_currency": {
                    "type": "string",
                    "example": "EUR"
                }
            }
        },
        "requests.ExchangeResponse": {
            "type": "object",
            "properties": {
                "exchanged_amount": {
                    "type": "number",
                    "example": 17
                },
                "message": {
                    "type": "string",
                    "example": "exchanged successfully"
                },
                "new_balance": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "requests.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "secure_password"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "requests.NotAuthorizedError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid token"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "requests.NotEnoughFundsError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "not enough money to withdraw"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "requests.RatesResponse": {
            "type": "object",
            "properties": {
                "rates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "requests.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "secure_password"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "requests.RetrieveRatesError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "failed to retrieve exchange rates"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "requests.WithdrawRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 25
                },
                "currency": {
                    "type": "string",
                    "example": "USD"
                }
            }
        }
    }
}